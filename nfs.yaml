---
apiVersion: v1
kind: Namespace
metadata:
  name: nfs-storage
  labels:
    name: nfs-storage
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nfs-client-provisioner-common
  namespace: nfs-storage
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      k8s-app: nfs-client-provisioner-common
  template:
    metadata:
      labels:
        k8s-app: nfs-client-provisioner-common
    spec:
      serviceAccountName: nfs-client-provisioner-common
      containers:
        - name: nfs-client-provisioner-common
          image: kopkop/nfs-client-provisioner-arm64:latest
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: nfs-client-root
              mountPath: /persistentvolumes
            - mountPath: /etc/localtime
              name: localtime              
          ports:
            - containerPort: 9200
          env:
            - name: PROVISIONER_NAME
              value: common-nfs-storage 
            - name: NFS_SERVER
              value: HOST
            - name: NFS_PATH
              value: /k8s/nfs-storage/common
      volumes:
        - name: nfs-client-root
          nfs:
            server: HOST
            path: /k8s/nfs-storage/common
        - name: localtime
          hostPath:
            path: /etc/localtime
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: nfs-storage
provisioner: common-nfs-storage
parameters:
  archiveOnDelete: "true"
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: nfs-client-provisioner-common
  namespace: nfs-storage
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nfs-client-provisioner-runner-common
  namespace: nfs-storage
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "update", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: run-nfs-client-provisioner-common
  namespace: nfs-storage
subjects:
  - kind: ServiceAccount
    name: nfs-client-provisioner-common
    namespace: nfs-storage
roleRef:
  kind: ClusterRole
  name: nfs-client-provisioner-runner-common
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: leader-locking-nfs-client-provisioner-common
  namespace: nfs-storage
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: leader-locking-nfs-client-provisioner-common
  namespace: nfs-storage
subjects:
  - kind: ServiceAccount
    name: nfs-client-provisioner-common
    namespace: nfs-storage
roleRef:
  kind: Role
  name: leader-locking-nfs-client-provisioner-common
  apiGroup: rbac.authorization.k8s.io
